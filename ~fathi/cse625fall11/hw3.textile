---
layout: homework-ta
title: CSE 625 (Fall 2011), Homework 3
---
I'm grading it. It will be done by Monday (Oct 24, 2011).

table(homework-list). 
|_. Question #  |_. Points |_. MIN |_. MAX |_. AVERAGE |_. Comments |
|=.  "1":#Q1    |=.  12    |=.  2  |=. 12  |=.   8.67  | Parts (a), (b) and ==(c)== each has 4 points. |
|=.  "2":#Q2    |=.   8    |=.  0  |=.  8  |=.   5.89  | Parts (a), and (b) each has 4 points. |
|=.  "3":#Q3    |=.  12    |=.  0  |=.  12 |=.   5.46  | Parts (a), (b) and ==(c)== each has 4 points. |
|=.  "4":#Q4    |=.  12    |=.  0  |=.  12 |=.   5.62  | See "below":#Q4 for detail. |

Some notes about homework #3.

h2(#Q1). Question 1 <a name="Q1"></a>

* A DFA does not have any transition labeled λ. If you have a λ transition, your answer is wrong.
* Each state in a DFA over an alphabet with _n_ symbols has exactly _n_ outgoing transitions. If for any state you do not have exactly two outgoing transitions, your answer is wrong.

h3(#Q1c). Part C

The DFA shown below was a *COMMON MISTAKE*. This DFA does not accept 01 which is a string in the language, neither does it accept 0101 (and 010101 and ...). 
!hw3-q1-a.gif(Wrong Answer.)!

h2(#Q2). Question 2

h3. Part A

The question explicitly asks you to give a D.F.A. with  _only four states_.
!hw3-q2-a.gif(An automata that accepts strings with even number of 0's and even number of 1's)! 

h3. Part B

One of the possible answers is (00+11+(10+01)(11+00)[^*^](10+01))[^*^].
*Common Mistake:* Note that (00+11+0101+0110+1001+1010)[^*^] does NOT generate strings like 101101 which are in the language.

h2(#Q3). Question 3

It seems that question was somehow vague because many students didn't understand what this question really wants. In your future assignments, if you don't know what a question actually wants, please ask me.

h3. Answers

*Part ==(a)==:* The set of all languages with a finite number of strings (elements).
*Part ==(b)==:*  The set of all languages whose strings are of length at most one.
*Part ==(c)==:* The set of all languages that contain at most one string.

h3. Notes

* The Kleene operation cannot be emulated by the union operation. If _A_ and _B_ are two finite languages, their union is still a finite language. But the Kleene closure of a finite language can be infinite.
* All the above languages contain the base language which means they contain _ϕ_ and {λ}.
* I've seen phrases such as "languages over Σ ∪ {λ}" or "languages over {Σ} ∪ {λ}". These are wrong because an alphabet cannot contain λ.
* All finite languages are regular (why?). So a phrases such as "The set of all finate regular languages" is redundant (but it is wrong).

h2(#Q4). Question 4

h3. Answer

==|==F[~173~]==|== is finite and is an even number. It is finite because the number of DFAs that can be construct by __n__ states is finite and each DFA is equivalent to one and only one language. It is even because for any DFA with n states that accepts __L__, you can construct another DFA that accepts the compliment of __L__ by changing the accepting states to rejecting and visa versa.

h3. Notes

Many of you tried to find the exact value of ==|==F[~173~]==|==. This needs answering at least three other questions:
# In how many ways can we assign accepting/rejecting states to the DFA.
# In how many different ways can we assign transition to states?.
# In how many ways can we specify the initial state in a DFA with __n__ states?

If you have shown the answer to the first question is an even number, you will get the full scores for this question (regardless of your answer to the second and third question.

